name: Telegram Signals

on:
  schedule:
    - cron: "*/15 * * * *"   # alle 15 Minuten
  workflow_dispatch:

permissions:
  contents: write            # damit der State committet werden kann

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # --- optional: Variablen zentral setzen (Coins & Schwellen) ---
      - name: Export config env
        run: |
          echo "COINGECKO_IDS=bitcoin,ethereum,solana" >> $GITHUB_ENV
          echo "SYMBOLS=BTC,ETH,SOL" >> $GITHUB_ENV
          # Schwellen (in %): Info / Signal / Alarm
          echo "THRESH_INFO=0.8" >> $GITHUB_ENV
          echo "THRESH_SIGNAL=1.5" >> $GITHUB_ENV
          echo "THRESH_ALERT=3.0" >> $GITHUB_ENV

      # --- Secrets prüfen, bevor gesendet wird ---
      - name: Check Telegram secrets
        run: |
          if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
            echo "Missing secret: TELEGRAM_BOT_TOKEN"; exit 1; fi
          if [ -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "Missing secret: TELEGRAM_CHAT_ID"; exit 1; fi
          echo "✅ Secrets vorhanden."

      - name: Generate message & state
        env:
          COINGECKO_IDS: ${{ env.COINGECKO_IDS }}
          SYMBOLS: ${{ env.SYMBOLS }}
          THRESH_INFO: ${{ env.THRESH_INFO }}
          THRESH_SIGNAL: ${{ env.THRESH_SIGNAL }}
          THRESH_ALERT: ${{ env.THRESH_ALERT }}
        run: python generate_message.py

      - name: Send to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python telegram_send.py

      - name: Commit updated signal_state.json (if changed)
        run: |
          git config user.email "bot@users.noreply.github.com"
          git config user.name  "GitHub Actions"
          git add signal_state.json message.txt || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: update signal_state $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
            git push
          else
            echo "No state changes to commit."
          fi
